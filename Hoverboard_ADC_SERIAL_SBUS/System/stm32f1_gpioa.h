// Header..: GPIOA.H
// Version.: 1.0
// Compiler: GCC-ARM
// Chip....: STM32F10x
// Date....: January 2025
// Author..: Udo Juerss
//-----------------------------------------------------------------------------

#pragma once
//-----------------------------------------------------------------------------

// GPIOA analog inputs
#define GPIOA_0_IN_AN() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_AN_0;}
#define GPIOA_1_IN_AN() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_AN_1;}
#define GPIOA_2_IN_AN() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_AN_2;}
#define GPIOA_3_IN_AN() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_AN_3;}
#define GPIOA_4_IN_AN() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_AN_4;}
#define GPIOA_5_IN_AN() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_AN_5;}
#define GPIOA_6_IN_AN() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_AN_6;}
#define GPIOA_7_IN_AN() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_AN_7;}
#define GPIOA_8_IN_AN() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_AN_0;}
#define GPIOA_9_IN_AN() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_AN_1;}
#define GPIOA_10_IN_AN() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_AN_2;}
#define GPIOA_11_IN_AN() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_AN_3;}
#define GPIOA_12_IN_AN() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_AN_4;}
#define GPIOA_13_IN_AN() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_AN_5;}
#define GPIOA_14_IN_AN() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_AN_6;}
#define GPIOA_15_IN_AN() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_AN_7;}

// GPIOA floating inputs
#define GPIOA_0_IN_FLT() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_FLT_0;}
#define GPIOA_1_IN_FLT() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_FLT_1;}
#define GPIOA_2_IN_FLT() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_FLT_2;}
#define GPIOA_3_IN_FLT() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_FLT_3;}
#define GPIOA_4_IN_FLT() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_FLT_4;}
#define GPIOA_5_IN_FLT() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_FLT_5;}
#define GPIOA_6_IN_FLT() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_FLT_6;}
#define GPIOA_7_IN_FLT() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_FLT_7;}
#define GPIOA_8_IN_FLT() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_FLT_0;}
#define GPIOA_9_IN_FLT() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_FLT_1;}
#define GPIOA_10_IN_FLT() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_FLT_2;}
#define GPIOA_11_IN_FLT() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_FLT_3;}
#define GPIOA_12_IN_FLT() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_FLT_4;}
#define GPIOA_13_IN_FLT() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_FLT_5;}
#define GPIOA_14_IN_FLT() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_FLT_6;}
#define GPIOA_15_IN_FLT() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_FLT_7;}

// GPIOA inputs with pullup enabled
#define GPIOA_0_IN_PU() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_PUD_0; GPIOA_0_SET();}
#define GPIOA_1_IN_PU() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_PUD_1; GPIOA_1_SET();}
#define GPIOA_2_IN_PU() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_PUD_2; GPIOA_2_SET();}
#define GPIOA_3_IN_PU() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_PUD_3; GPIOA_3_SET();}
#define GPIOA_4_IN_PU() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_PUD_4; GPIOA_4_SET();}
#define GPIOA_5_IN_PU() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_PUD_5; GPIOA_5_SET();}
#define GPIOA_6_IN_PU() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_PUD_6; GPIOA_6_SET();}
#define GPIOA_7_IN_PU() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_PUD_7; GPIOA_7_SET();}
#define GPIOA_8_IN_PU() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_PUD_0; GPIOA_8_SET();}
#define GPIOA_9_IN_PU() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_PUD_1; GPIOA_9_SET();}
#define GPIOA_10_IN_PU() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_PUD_2; GPIOA_10_SET();}
#define GPIOA_11_IN_PU() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_PUD_3; GPIOA_11_SET();}
#define GPIOA_12_IN_PU() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_PUD_4; GPIOA_12_SET();}
#define GPIOA_13_IN_PU() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_PUD_5; GPIOA_13_SET();}
#define GPIOA_14_IN_PU() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_PUD_6; GPIOA_14_SET();}
#define GPIOA_15_IN_PU() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_PUD_7; GPIOA_15_SET();}

// GPIOA inputs with pulldown enabled
#define GPIOA_0_IN_PD() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_PUD_0; GPIOA_0_CLR();}
#define GPIOA_1_IN_PD() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_PUD_1; GPIOA_1_CLR();}
#define GPIOA_2_IN_PD() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_PUD_2; GPIOA_2_CLR();}
#define GPIOA_3_IN_PD() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_PUD_3; GPIOA_3_CLR();}
#define GPIOA_4_IN_PD() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_PUD_4; GPIOA_4_CLR();}
#define GPIOA_5_IN_PD() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_PUD_5; GPIOA_5_CLR();}
#define GPIOA_6_IN_PD() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_PUD_6; GPIOA_6_CLR();}
#define GPIOA_7_IN_PD() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_PUD_7; GPIOA_7_CLR();}
#define GPIOA_8_IN_PD() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_PUD_0; GPIOA_8_CLR();}
#define GPIOA_9_IN_PD() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_PUD_1; GPIOA_9_CLR();}
#define GPIOA_10_IN_PD() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_PUD_2; GPIOA_10_CLR();}
#define GPIOA_11_IN_PD() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_PUD_3; GPIOA_11_CLR();}
#define GPIOA_12_IN_PD() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_PUD_4; GPIOA_12_CLR();}
#define GPIOA_13_IN_PD() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_PUD_5; GPIOA_13_CLR();}
#define GPIOA_14_IN_PD() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_PUD_6; GPIOA_14_CLR();}
#define GPIOA_15_IN_PD() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_PUD_7; GPIOA_15_CLR();}

// GPIOA push/pull outputs 2M/10M/50M
#define GPIOA_0_OUT_PP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_PP_0_2M;}
#define GPIOA_0_OUT_PP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_PP_0_10M;}
#define GPIOA_0_OUT_PP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_PP_0_50M;}

#define GPIOA_1_OUT_PP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_PP_1_2M;}
#define GPIOA_1_OUT_PP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_PP_1_10M;}
#define GPIOA_1_OUT_PP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_PP_1_50M;}

#define GPIOA_2_OUT_PP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_PP_2_2M;}
#define GPIOA_2_OUT_PP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_PP_2_10M;}
#define GPIOA_2_OUT_PP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_PP_2_50M;}

#define GPIOA_3_OUT_PP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_PP_3_2M;}
#define GPIOA_3_OUT_PP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_PP_3_10M;}
#define GPIOA_3_OUT_PP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_PP_3_50M;}

#define GPIOA_4_OUT_PP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_PP_4_2M;}
#define GPIOA_4_OUT_PP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_PP_4_10M;}
#define GPIOA_4_OUT_PP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_PP_4_50M;}

#define GPIOA_5_OUT_PP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_PP_5_2M;}
#define GPIOA_5_OUT_PP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_PP_5_10M;}
#define GPIOA_5_OUT_PP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_PP_5_50M;}

#define GPIOA_6_OUT_PP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_PP_6_2M;}
#define GPIOA_6_OUT_PP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_PP_6_10M;}
#define GPIOA_6_OUT_PP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_PP_6_50M;}

#define GPIOA_7_OUT_PP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_PP_7_2M;}
#define GPIOA_7_OUT_PP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_PP_7_10M;}
#define GPIOA_7_OUT_PP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_PP_7_50M;}

#define GPIOA_8_OUT_PP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_PP_0_2M;}
#define GPIOA_8_OUT_PP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_PP_0_10M;}
#define GPIOA_8_OUT_PP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_PP_0_50M;}

#define GPIOA_9_OUT_PP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_PP_1_2M;}
#define GPIOA_9_OUT_PP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_PP_1_10M;}
#define GPIOA_9_OUT_PP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_PP_1_50M;}

#define GPIOA_10_OUT_PP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_PP_2_2M;}
#define GPIOA_10_OUT_PP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_PP_2_10M;}
#define GPIOA_10_OUT_PP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_PP_2_50M;}

#define GPIOA_11_OUT_PP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_PP_3_2M;}
#define GPIOA_11_OUT_PP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_PP_3_10M;}
#define GPIOA_11_OUT_PP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_PP_3_50M;}

#define GPIOA_12_OUT_PP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_PP_4_2M;}
#define GPIOA_12_OUT_PP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_PP_4_10M;}
#define GPIOA_12_OUT_PP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_PP_4_50M;}

#define GPIOA_13_OUT_PP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_PP_5_2M;}
#define GPIOA_13_OUT_PP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_PP_5_10M;}
#define GPIOA_13_OUT_PP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_PP_5_50M;}

#define GPIOA_14_OUT_PP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_PP_6_2M;}
#define GPIOA_14_OUT_PP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_PP_6_10M;}
#define GPIOA_14_OUT_PP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_PP_6_50M;}

#define GPIOA_15_OUT_PP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_PP_7_2M;}
#define GPIOA_15_OUT_PP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_PP_7_10M;}
#define GPIOA_15_OUT_PP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_PP_7_50M;}

// GPIOA open drain outputs 2M/10M/50M
#define GPIOA_0_OUT_OD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_OD_0_2M;}
#define GPIOA_0_OUT_OD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_OD_0_10M;}
#define GPIOA_0_OUT_OD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_OD_0_50M;}

#define GPIOA_1_OUT_OD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_OD_1_2M;}
#define GPIOA_1_OUT_OD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_OD_1_10M;}
#define GPIOA_1_OUT_OD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_OD_1_50M;}

#define GPIOA_2_OUT_OD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_OD_2_2M;}
#define GPIOA_2_OUT_OD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_OD_2_10M;}
#define GPIOA_2_OUT_OD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_OD_2_50M;}

#define GPIOA_3_OUT_OD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_OD_3_2M;}
#define GPIOA_3_OUT_OD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_OD_3_10M;}
#define GPIOA_3_OUT_OD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_OD_3_50M;}

#define GPIOA_4_OUT_OD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_OD_4_2M;}
#define GPIOA_4_OUT_OD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_OD_4_10M;}
#define GPIOA_4_OUT_OD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_OD_4_50M;}

#define GPIOA_5_OUT_OD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_OD_5_2M;}
#define GPIOA_5_OUT_OD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_OD_5_10M;}
#define GPIOA_5_OUT_OD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_OD_5_50M;}

#define GPIOA_6_OUT_OD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_OD_6_2M;}
#define GPIOA_6_OUT_OD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_OD_6_10M;}
#define GPIOA_6_OUT_OD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_OD_6_50M;}

#define GPIOA_7_OUT_OD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_OD_7_2M;}
#define GPIOA_7_OUT_OD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_OD_7_10M;}
#define GPIOA_7_OUT_OD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_OD_7_50M;}

#define GPIOA_8_OUT_OD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_OD_0_2M;}
#define GPIOA_8_OUT_OD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_OD_0_10M;}
#define GPIOA_8_OUT_OD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_OD_0_50M;}

#define GPIOA_9_OUT_OD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_OD_1_2M;}
#define GPIOA_9_OUT_OD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_OD_1_10M;}
#define GPIOA_9_OUT_OD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_OD_1_50M;}

#define GPIOA_10_OUT_OD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_OD_2_2M;}
#define GPIOA_10_OUT_OD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_OD_2_10M;}
#define GPIOA_10_OUT_OD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_OD_2_50M;}

#define GPIOA_11_OUT_OD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_OD_3_2M;}
#define GPIOA_11_OUT_OD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_OD_3_10M;}
#define GPIOA_11_OUT_OD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_OD_3_50M;}

#define GPIOA_12_OUT_OD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_OD_4_2M;}
#define GPIOA_12_OUT_OD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_OD_4_10M;}
#define GPIOA_12_OUT_OD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_OD_4_50M;}

#define GPIOA_13_OUT_OD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_OD_5_2M;}
#define GPIOA_13_OUT_OD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_OD_5_10M;}
#define GPIOA_13_OUT_OD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_OD_5_50M;}

#define GPIOA_14_OUT_OD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_OD_6_2M;}
#define GPIOA_14_OUT_OD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_OD_6_10M;}
#define GPIOA_14_OUT_OD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_OD_6_50M;}

#define GPIOA_15_OUT_OD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_OD_7_2M;}
#define GPIOA_15_OUT_OD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_OD_7_10M;}
#define GPIOA_15_OUT_OD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_OD_7_50M;}

// GPIOA alternate function push/pull outputs 2M/10M/50M
#define GPIOA_0_OUT_AFPP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_AFPP_0_2M;}
#define GPIOA_0_OUT_AFPP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_AFPP_0_10M;}
#define GPIOA_0_OUT_AFPP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_AFPP_0_50M;}

#define GPIOA_1_OUT_AFPP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_AFPP_1_2M;}
#define GPIOA_1_OUT_AFPP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_AFPP_1_10M;}
#define GPIOA_1_OUT_AFPP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_AFPP_1_50M;}

#define GPIOA_2_OUT_AFPP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_AFPP_2_2M;}
#define GPIOA_2_OUT_AFPP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_AFPP_2_10M;}
#define GPIOA_2_OUT_AFPP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_AFPP_2_50M;}

#define GPIOA_3_OUT_AFPP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_AFPP_3_2M;}
#define GPIOA_3_OUT_AFPP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_AFPP_3_10M;}
#define GPIOA_3_OUT_AFPP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_AFPP_3_50M;}

#define GPIOA_4_OUT_AFPP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_AFPP_4_2M;}
#define GPIOA_4_OUT_AFPP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_AFPP_4_10M;}
#define GPIOA_4_OUT_AFPP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_AFPP_4_50M;}

#define GPIOA_5_OUT_AFPP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_AFPP_5_2M;}
#define GPIOA_5_OUT_AFPP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_AFPP_5_10M;}
#define GPIOA_5_OUT_AFPP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_AFPP_5_50M;}

#define GPIOA_6_OUT_AFPP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_AFPP_6_2M;}
#define GPIOA_6_OUT_AFPP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_AFPP_6_10M;}
#define GPIOA_6_OUT_AFPP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_AFPP_6_50M;}

#define GPIOA_7_OUT_AFPP_2M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_AFPP_7_2M;}
#define GPIOA_7_OUT_AFPP_10M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_AFPP_7_10M;}
#define GPIOA_7_OUT_AFPP_50M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_AFPP_7_50M;}

#define GPIOA_8_OUT_AFPP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_AFPP_0_2M;}
#define GPIOA_8_OUT_AFPP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_AFPP_0_10M;}
#define GPIOA_8_OUT_AFPP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_AFPP_0_50M;}

#define GPIOA_9_OUT_AFPP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_AFPP_1_2M;}
#define GPIOA_9_OUT_AFPP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_AFPP_1_10M;}
#define GPIOA_9_OUT_AFPP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_AFPP_1_50M;}

#define GPIOA_10_OUT_AFPP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_AFPP_2_2M;}
#define GPIOA_10_OUT_AFPP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_AFPP_2_10M;}
#define GPIOA_10_OUT_AFPP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_AFPP_2_50M;}

#define GPIOA_11_OUT_AFPP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_AFPP_3_2M;}
#define GPIOA_11_OUT_AFPP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_AFPP_3_10M;}
#define GPIOA_11_OUT_AFPP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_AFPP_3_50M;}

#define GPIOA_12_OUT_AFPP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_AFPP_4_2M;}
#define GPIOA_12_OUT_AFPP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_AFPP_4_10M;}
#define GPIOA_12_OUT_AFPP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_AFPP_4_50M;}

#define GPIOA_13_OUT_AFPP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_AFPP_5_2M;}
#define GPIOA_13_OUT_AFPP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_AFPP_5_10M;}
#define GPIOA_13_OUT_AFPP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_AFPP_5_50M;}

#define GPIOA_14_OUT_AFPP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_AFPP_6_2M;}
#define GPIOA_14_OUT_AFPP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_AFPP_6_10M;}
#define GPIOA_14_OUT_AFPP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_AFPP_6_50M;}

#define GPIOA_15_OUT_AFPP_2M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_AFPP_7_2M;}
#define GPIOA_15_OUT_AFPP_10M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_AFPP_7_10M;}
#define GPIOA_15_OUT_AFPP_50M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_AFPP_7_50M;}

// GPIOA alternate function open drain outputs 2M/10M/50M
#define GPIOA_0_OUT_AFOD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_AFOD_0_2M;}
#define GPIOA_0_OUT_AFOD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_AFOD_0_10M;}
#define GPIOA_0_OUT_AFOD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_0; GPIOA->CRL |= GPIO_MSK_AFOD_0_50M;}

#define GPIOA_1_OUT_AFOD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_AFOD_1_2M;}
#define GPIOA_1_OUT_AFOD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_AFOD_1_10M;}
#define GPIOA_1_OUT_AFOD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_1; GPIOA->CRL |= GPIO_MSK_AFOD_1_50M;}

#define GPIOA_2_OUT_AFOD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_AFOD_2_2M;}
#define GPIOA_2_OUT_AFOD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_AFOD_2_10M;}
#define GPIOA_2_OUT_AFOD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_2; GPIOA->CRL |= GPIO_MSK_AFOD_2_50M;}

#define GPIOA_3_OUT_AFOD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_AFOD_3_2M;}
#define GPIOA_3_OUT_AFOD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_AFOD_3_10M;}
#define GPIOA_3_OUT_AFOD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_3; GPIOA->CRL |= GPIO_MSK_AFOD_3_50M;}

#define GPIOA_4_OUT_AFOD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_AFOD_4_2M;}
#define GPIOA_4_OUT_AFOD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_AFOD_4_10M;}
#define GPIOA_4_OUT_AFOD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_4; GPIOA->CRL |= GPIO_MSK_AFOD_4_50M;}

#define GPIOA_5_OUT_AFOD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_AFOD_5_2M;}
#define GPIOA_5_OUT_AFOD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_AFOD_5_10M;}
#define GPIOA_5_OUT_AFOD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_5; GPIOA->CRL |= GPIO_MSK_AFOD_5_50M;}

#define GPIOA_6_OUT_AFOD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_AFOD_6_2M;}
#define GPIOA_6_OUT_AFOD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_AFOD_6_10M;}
#define GPIOA_6_OUT_AFOD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_6; GPIOA->CRL |= GPIO_MSK_AFOD_6_50M;}

#define GPIOA_7_OUT_AFOD_2M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_AFOD_7_2M;}
#define GPIOA_7_OUT_AFOD_10M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_AFOD_7_10M;}
#define GPIOA_7_OUT_AFOD_50M() {GPIOA->CRL &= GPIO_MSK_CLR_7; GPIOA->CRL |= GPIO_MSK_AFOD_7_50M;}

#define GPIOA_8_OUT_AFOD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_AFOD_0_2M;}
#define GPIOA_8_OUT_AFOD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_AFOD_0_10M;}
#define GPIOA_8_OUT_AFOD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_0; GPIOA->CRH |= GPIO_MSK_AFOD_0_50M;}

#define GPIOA_9_OUT_AFOD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_AFOD_1_2M;}
#define GPIOA_9_OUT_AFOD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_AFOD_1_10M;}
#define GPIOA_9_OUT_AFOD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_1; GPIOA->CRH |= GPIO_MSK_AFOD_1_50M;}

#define GPIOA_10_OUT_AFOD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_AFOD_2_2M;}
#define GPIOA_10_OUT_AFOD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_AFOD_2_10M;}
#define GPIOA_10_OUT_AFOD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_2; GPIOA->CRH |= GPIO_MSK_AFOD_2_50M;}

#define GPIOA_11_OUT_AFOD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_AFOD_3_2M;}
#define GPIOA_11_OUT_AFOD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_AFOD_3_10M;}
#define GPIOA_11_OUT_AFOD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_3; GPIOA->CRH |= GPIO_MSK_AFOD_3_50M;}

#define GPIOA_12_OUT_AFOD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_AFOD_4_2M;}
#define GPIOA_12_OUT_AFOD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_AFOD_4_10M;}
#define GPIOA_12_OUT_AFOD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_4; GPIOA->CRH |= GPIO_MSK_AFOD_4_50M;}

#define GPIOA_13_OUT_AFOD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_AFOD_5_2M;}
#define GPIOA_13_OUT_AFOD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_AFOD_5_10M;}
#define GPIOA_13_OUT_AFOD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_5; GPIOA->CRH |= GPIO_MSK_AFOD_5_50M;}

#define GPIOA_14_OUT_AFOD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_AFOD_6_2M;}
#define GPIOA_14_OUT_AFOD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_AFOD_6_10M;}
#define GPIOA_14_OUT_AFOD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_6; GPIOA->CRH |= GPIO_MSK_AFOD_6_50M;}

#define GPIOA_15_OUT_AFOD_2M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_AFOD_7_2M;}
#define GPIOA_15_OUT_AFOD_10M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_AFOD_7_10M;}
#define GPIOA_15_OUT_AFOD_50M() {GPIOA->CRH &= GPIO_MSK_CLR_7; GPIOA->CRH |= GPIO_MSK_AFOD_7_50M;}
//-----------------------------------------------------------------------------

// GPIOA SET/CLR/CHG/TGL/Get macros
#define GPIOA_0_SET() (GPIOA->BSRR = BIT0)
#define GPIOA_0_CLR() (GPIOA->BRR = BIT0)
#define GPIOA_0_CHG(b) {if (b) GPIOA_0_SET(); else GPIOA_0_CLR();}
#define GPIOA_0_TGL() (GPIOA->ODR ^= BIT0)
#define GPIOA_0_GET() ((GPIOA->IDR & BIT0) == BIT0)

#define GPIOA_1_SET() (GPIOA->BSRR = BIT1)
#define GPIOA_1_CLR() (GPIOA->BRR = BIT1)
#define GPIOA_1_CHG(b) {if (b) GPIOA_1_SET(); else GPIOA_1_CLR();}
#define GPIOA_1_TGL() (GPIOA->ODR ^= BIT1)
#define GPIOA_1_GET() ((GPIOA->IDR & BIT1) == BIT1)

#define GPIOA_2_SET() (GPIOA->BSRR = BIT2)
#define GPIOA_2_CLR() (GPIOA->BRR = BIT2)
#define GPIOA_2_CHG(b) {if (b) GPIOA_2_SET(); else GPIOA_2_CLR();}
#define GPIOA_2_TGL() (GPIOA->ODR ^= BIT2)
#define GPIOA_2_GET() ((GPIOA->IDR & BIT2) == BIT2)

#define GPIOA_3_SET() (GPIOA->BSRR = BIT3)
#define GPIOA_3_CLR() (GPIOA->BRR = BIT3)
#define GPIOA_3_CHG(b) {if (b) GPIOA_3_SET(); else GPIOA_3_CLR();}
#define GPIOA_3_TGL() (GPIOA->ODR ^= BIT3)
#define GPIOA_3_GET() ((GPIOA->IDR & BIT3) == BIT3)

#define GPIOA_4_SET() (GPIOA->BSRR = BIT4)
#define GPIOA_4_CLR() (GPIOA->BRR = BIT4)
#define GPIOA_4_CHG(b) {if (b) GPIOA_4_SET(); else GPIOA_4_CLR();}
#define GPIOA_4_TGL() (GPIOA->ODR ^= BIT4)
#define GPIOA_4_GET() ((GPIOA->IDR & BIT4) == BIT4)

#define GPIOA_5_SET() (GPIOA->BSRR = BIT5)
#define GPIOA_5_CLR() (GPIOA->BRR = BIT5)
#define GPIOA_5_CHG(b) {if (b) GPIOA_5_SET(); else GPIOA_5_CLR();}
#define GPIOA_5_TGL() (GPIOA->ODR ^= BIT5)
#define GPIOA_5_GET() ((GPIOA->IDR & BIT5) == BIT5)

#define GPIOA_6_SET() (GPIOA->BSRR = BIT6)
#define GPIOA_6_CLR() (GPIOA->BRR = BIT6)
#define GPIOA_6_CHG(b) {if (b) GPIOA_6_SET(); else GPIOA_6_CLR();}
#define GPIOA_6_TGL() (GPIOA->ODR ^= BIT6)
#define GPIOA_6_GET() ((GPIOA->IDR & BIT6) == BIT6)

#define GPIOA_7_SET() (GPIOA->BSRR = BIT7)
#define GPIOA_7_CLR() (GPIOA->BRR = BIT7)
#define GPIOA_7_CHG(b) {if (b) GPIOA_7_SET(); else GPIOA_7_CLR();}
#define GPIOA_7_TGL() (GPIOA->ODR ^= BIT7)
#define GPIOA_7_GET() ((GPIOA->IDR & BIT7) == BIT7)

#define GPIOA_8_SET() (GPIOA->BSRR = BIT8)
#define GPIOA_8_CLR() (GPIOA->BRR = BIT8)
#define GPIOA_8_CHG(b) {if (b) GPIOA_8_SET(); else GPIOA_8_CLR();}
#define GPIOA_8_TGL() (GPIOA->ODR ^= BIT8)
#define GPIOA_8_GET() ((GPIOA->IDR & BIT8) == BIT8)

#define GPIOA_9_SET() (GPIOA->BSRR = BIT9)
#define GPIOA_9_CLR() (GPIOA->BRR = BIT9)
#define GPIOA_9_CHG(b) {if (b) GPIOA_9_SET(); else GPIOA_9_CLR();}
#define GPIOA_9_TGL() (GPIOA->ODR ^= BIT9)
#define GPIOA_9_GET() ((GPIOA->IDR & BIT9) == BIT9)

#define GPIOA_10_SET() (GPIOA->BSRR = BIT10)
#define GPIOA_10_CLR() (GPIOA->BRR = BIT10)
#define GPIOA_10_CHG(b) {if (b) GPIOA_10_SET(); else GPIOA_10_CLR();}
#define GPIOA_10_TGL() (GPIOA->ODR ^= BIT10)
#define GPIOA_10_GET() ((GPIOA->IDR & BIT10) == BIT10)

#define GPIOA_11_SET() (GPIOA->BSRR = BIT11)
#define GPIOA_11_CLR() (GPIOA->BRR = BIT11)
#define GPIOA_11_CHG(b) {if (b) GPIOA_11_SET(); else GPIOA_11_CLR();}
#define GPIOA_11_TGL() (GPIOA->ODR ^= BIT11)
#define GPIOA_11_GET() ((GPIOA->IDR & BIT11) == BIT11)

#define GPIOA_12_SET() (GPIOA->BSRR = BIT12)
#define GPIOA_12_CLR() (GPIOA->BRR = BIT12)
#define GPIOA_12_CHG(b) {if (b) GPIOA_12_SET(); else GPIOA_12_CLR();}
#define GPIOA_12_TGL() (GPIOA->ODR ^= BIT12)
#define GPIOA_12_GET() ((GPIOA->IDR & BIT12) == BIT12)

#define GPIOA_13_SET() (GPIOA->BSRR = BIT13)
#define GPIOA_13_CLR() (GPIOA->BRR = BIT13)
#define GPIOA_13_CHG(b) {if (b) GPIOA_13_SET(); else GPIOA_13_CLR();}
#define GPIOA_13_TGL() (GPIOA->ODR ^= BIT13)
#define GPIOA_13_GET() ((GPIOA->IDR & BIT13) == BIT13)

#define GPIOA_14_SET() (GPIOA->BSRR = BIT14)
#define GPIOA_14_CLR() (GPIOA->BRR = BIT14)
#define GPIOA_14_CHG(b) {if (b) GPIOA_14_SET(); else GPIOA_14_CLR();}
#define GPIOA_14_TGL() (GPIOA->ODR ^= BIT14)
#define GPIOA_14_GET() ((GPIOA->IDR & BIT14) == BIT14)

#define GPIOA_15_SET() (GPIOA->BSRR = BIT15)
#define GPIOA_15_CLR() (GPIOA->BRR = BIT15)
#define GPIOA_15_CHG(b) {if (b) GPIOA_15_SET(); else GPIOA_15_CLR();}
#define GPIOA_15_TGL() (GPIOA->ODR ^= BIT15)
#define GPIOA_15_GET() ((GPIOA->IDR & BIT15) == BIT15)
